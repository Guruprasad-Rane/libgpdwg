
import logging
logger = logging.getLogger('gpdwg_logger')
import bit
def readall(gpdwg,dat):
	"""Reads variables"""
	gpdwg.header['variables']={}
	ver=gpdwg.header['ACADVER']
	if dat.version == 2007:
		gpdwg.variable.SIZE_IN_BITS=bit.readwithlog('RL',dat,'SIZE_IN_BITS',1)
	if dat.version >= 2013:
		gpdwg.variable.REQUIREDVERSIONS=bit.readwithlog('BLL',dat,'REQUIREDVERSIONS',1)
	gpdwg.variable.UNKNOWN_01=bit.readwithlog('BD',dat,'UNKNOWN_01',1)
	gpdwg.variable.UNKNOWN_02=bit.readwithlog('BD',dat,'UNKNOWN_02',1)
	gpdwg.variable.UNKNOWN_03=bit.readwithlog('BD',dat,'UNKNOWN_03',1)
	gpdwg.variable.UNKNOWN_04=bit.readwithlog('BD',dat,'UNKNOWN_04',1)
	gpdwg.variable.UNKNOWN_05=bit.readwithlog('TV',dat,'UNKNOWN_05',1)
	gpdwg.variable.UNKNOWN_06=bit.readwithlog('TV',dat,'UNKNOWN_06',1)
	gpdwg.variable.UNKNOWN_07=bit.readwithlog('TV',dat,'UNKNOWN_07',1)
	gpdwg.variable.UNKNOWN_08=bit.readwithlog('TV',dat,'UNKNOWN_08',1)
	gpdwg.variable.UNKNOWN_09=bit.readwithlog('BL',dat,'UNKNOWN_09',1)
	gpdwg.variable.UNKNOWN_10=bit.readwithlog('BL',dat,'UNKNOWN_10',1)
	if dat.version <= 14:
		gpdwg.variable.UNKNOWN_11=bit.readwithlog('BS',dat,'UNKNOWN_11',1)
	if dat.version <= 2000:
		gpdwg.variable.CURRENT_VIEWPORT_HANDLE=bit.readwithlog('H',dat,'CURRENT_VIEWPORT_HANDLE',1)
	gpdwg.variable.DIMASO=bit.readwithlog('B',dat,'DIMASO',1)
	gpdwg.variable.DIMSHO=bit.readwithlog('B',dat,'DIMSHO',1)
	if dat.version <= 14:
		gpdwg.variable.DIMSAV=bit.readwithlog('B',dat,'DIMSAV',1)
	gpdwg.variable.PLINEGEN=bit.readwithlog('B',dat,'PLINEGEN',1)
	gpdwg.variable.ORTHOMODE=bit.readwithlog('B',dat,'ORTHOMODE',1)
	gpdwg.variable.REGENMODE=bit.readwithlog('B',dat,'REGENMODE',1)
	gpdwg.variable.FILLMODE=bit.readwithlog('B',dat,'FILLMODE',1)
	gpdwg.variable.QTEXTMODE=bit.readwithlog('B',dat,'QTEXTMODE',1)
	gpdwg.variable.PSLTSCALE=bit.readwithlog('B',dat,'PSLTSCALE',1)
	gpdwg.variable.LIMCHECK=bit.readwithlog('B',dat,'LIMCHECK',1)
	if dat.version <= 14:
		gpdwg.variable.BLIPMODE=bit.readwithlog('B',dat,'BLIPMODE',1)
	if dat.version >= 2004:
		gpdwg.variable.UNDOCUMENTED=bit.readwithlog('B',dat,'UNDOCUMENTED',1)
	gpdwg.variable.USRTIMER=bit.readwithlog('B',dat,'USRTIMER',1)
	gpdwg.variable.SKPOLY=bit.readwithlog('B',dat,'SKPOLY',1)
	gpdwg.variable.ANGDIR=bit.readwithlog('B',dat,'ANGDIR',1)
	gpdwg.variable.SPLFRAME=bit.readwithlog('B',dat,'SPLFRAME',1)
	if dat.version <= 14:
		gpdwg.variable.ATTREQ=bit.readwithlog('B',dat,'ATTREQ',1)
		gpdwg.variable.ATTDIA=bit.readwithlog('B',dat,'ATTDIA',1)
	gpdwg.variable.MIRRTEXT=bit.readwithlog('B',dat,'MIRRTEXT',1)
	gpdwg.variable.WORLDVIEW=bit.readwithlog('B',dat,'WORLDVIEW',1)
	if dat.version <= 14:
		gpdwg.variable.WIREFRAME=bit.readwithlog('B',dat,'WIREFRAME',1)
	gpdwg.variable.TILEMODE=bit.readwithlog('B',dat,'TILEMODE',1)
	gpdwg.variable.PLIMCHECK=bit.readwithlog('B',dat,'PLIMCHECK',1)
	gpdwg.variable.VISRETAIN=bit.readwithlog('B',dat,'VISRETAIN',1)
	if dat.version <= 14:
		gpdwg.variable.DELOBJ=bit.readwithlog('B',dat,'DELOBJ',1)
	gpdwg.variable.DISPSILH=bit.readwithlog('B',dat,'DISPSILH',1)
	gpdwg.variable.PELLIPSE=bit.readwithlog('B',dat,'PELLIPSE',1)
	gpdwg.variable.PROXYGRAPHICS=bit.readwithlog('BS',dat,'PROXYGRAPHICS',1)
	if dat.version <= 14:
		gpdwg.variable.DRAGMODE=bit.readwithlog('BS',dat,'DRAGMODE',1)
	gpdwg.variable.TREEDEPTH=bit.readwithlog('BS',dat,'TREEDEPTH',1)
	gpdwg.variable.LUNITS=bit.readwithlog('BS',dat,'LUNITS',1)
	gpdwg.variable.LUPREC=bit.readwithlog('BS',dat,'LUPREC',1)
	gpdwg.variable.AUNITS=bit.readwithlog('BS',dat,'AUNITS',1)
	gpdwg.variable.AUPREC=bit.readwithlog('BS',dat,'AUPREC',1)
	if dat.version <= 14:
		gpdwg.variable.OSMODE=bit.readwithlog('BS',dat,'OSMODE',1)
	gpdwg.variable.ATTMODE=bit.readwithlog('BS',dat,'ATTMODE',1)
	if dat.version <= 14:
		gpdwg.variable.COORDS=bit.readwithlog('BS',dat,'COORDS',1)
	gpdwg.variable.PDMODE=bit.readwithlog('BS',dat,'PDMODE',1)
	if dat.version <= 14:
		gpdwg.variable.PICKSTYLE=bit.readwithlog('BS',dat,'PICKSTYLE',1)
	if dat.version >= 2004:
		gpdwg.variable.UNKNOWN_12=bit.readwithlog('BL',dat,'UNKNOWN_12',1)
		gpdwg.variable.UNKNOWN_13=bit.readwithlog('BL',dat,'UNKNOWN_13',1)
		gpdwg.variable.UNKNOWN_14=bit.readwithlog('BL',dat,'UNKNOWN_14',1)
	gpdwg.variable.USERI1=bit.readwithlog('BS',dat,'USERI1',1)
	gpdwg.variable.USERI2=bit.readwithlog('BS',dat,'USERI2',1)
	gpdwg.variable.USERI3=bit.readwithlog('BS',dat,'USERI3',1)
	gpdwg.variable.USERI4=bit.readwithlog('BS',dat,'USERI4',1)
	gpdwg.variable.USERI5=bit.readwithlog('BS',dat,'USERI5',1)
	gpdwg.variable.SPLINESEGS=bit.readwithlog('BS',dat,'SPLINESEGS',1)
	gpdwg.variable.SURFU=bit.readwithlog('BS',dat,'SURFU',1)
	gpdwg.variable.SURFV=bit.readwithlog('BS',dat,'SURFV',1)
	gpdwg.variable.SURFTYPE=bit.readwithlog('BS',dat,'SURFTYPE',1)
	gpdwg.variable.SURFTAB1=bit.readwithlog('BS',dat,'SURFTAB1',1)
	gpdwg.variable.SURFTAB2=bit.readwithlog('BS',dat,'SURFTAB2',1)
	gpdwg.variable.SPLINETYPE=bit.readwithlog('BS',dat,'SPLINETYPE',1)
	gpdwg.variable.SHADEDGE=bit.readwithlog('BS',dat,'SHADEDGE',1)
	gpdwg.variable.SHADEDIF=bit.readwithlog('BS',dat,'SHADEDIF',1)
	gpdwg.variable.UNITMODE=bit.readwithlog('BS',dat,'UNITMODE',1)
	gpdwg.variable.MAXACTVP=bit.readwithlog('BS',dat,'MAXACTVP',1)
	gpdwg.variable.ISOLINES=bit.readwithlog('BS',dat,'ISOLINES',1)
	gpdwg.variable.CMLJUST=bit.readwithlog('BS',dat,'CMLJUST',1)
	gpdwg.variable.TEXTQLTY=bit.readwithlog('BS',dat,'TEXTQLTY',1)
	gpdwg.variable.LTSCALE=bit.readwithlog('BD',dat,'LTSCALE',1)
	gpdwg.variable.TEXTSIZE=bit.readwithlog('BD',dat,'TEXTSIZE',1)
	gpdwg.variable.TRACEWID=bit.readwithlog('BD',dat,'TRACEWID',1)
	gpdwg.variable.SKETCHINC=bit.readwithlog('BD',dat,'SKETCHINC',1)
	gpdwg.variable.FILLETRAD=bit.readwithlog('BD',dat,'FILLETRAD',1)
	gpdwg.variable.THICKNESS=bit.readwithlog('BD',dat,'THICKNESS',1)
	gpdwg.variable.ANGBASE=bit.readwithlog('BD',dat,'ANGBASE',1)
	gpdwg.variable.PDSIZE=bit.readwithlog('BD',dat,'PDSIZE',1)
	gpdwg.variable.PLINEWID=bit.readwithlog('BD',dat,'PLINEWID',1)
	gpdwg.variable.USERR1=bit.readwithlog('BD',dat,'USERR1',1)
	gpdwg.variable.USERR2=bit.readwithlog('BD',dat,'USERR2',1)
	gpdwg.variable.USERR3=bit.readwithlog('BD',dat,'USERR3',1)
	gpdwg.variable.USERR4=bit.readwithlog('BD',dat,'USERR4',1)
	gpdwg.variable.USERR5=bit.readwithlog('BD',dat,'USERR5',1)
	gpdwg.variable.CHAMFERA=bit.readwithlog('BD',dat,'CHAMFERA',1)
	gpdwg.variable.CHAMFERB=bit.readwithlog('BD',dat,'CHAMFERB',1)
	gpdwg.variable.CHAMFERC=bit.readwithlog('BD',dat,'CHAMFERC',1)
	gpdwg.variable.CHAMFERD=bit.readwithlog('BD',dat,'CHAMFERD',1)
	gpdwg.variable.FACETRES=bit.readwithlog('BD',dat,'FACETRES',1)
	gpdwg.variable.CMLSCALE=bit.readwithlog('BD',dat,'CMLSCALE',1)
	gpdwg.variable.CELTSCALE=bit.readwithlog('BD',dat,'CELTSCALE',1)
	if dat.version <= 2004:
		gpdwg.variable.MENUNAME=bit.readwithlog('TV',dat,'MENUNAME',1)
	gpdwg.variable.TDCREATE_JD=bit.readwithlog('BL',dat,'TDCREATE_JD',1)
	gpdwg.variable.TDCREATE_MS=bit.readwithlog('BL',dat,'TDCREATE_MS',1)
	gpdwg.variable.TDUPDATE_JD=bit.readwithlog('BL',dat,'TDUPDATE_JD',1)
	gpdwg.variable.TDUPDATE_MS=bit.readwithlog('BL',dat,'TDUPDATE_MS',1)
	if dat.version >= 2004:
		gpdwg.variable.UNKNOWN_15=bit.readwithlog('BL',dat,'UNKNOWN_15',1)
		gpdwg.variable.UNKNOWN_16=bit.readwithlog('BL',dat,'UNKNOWN_16',1)
		gpdwg.variable.UNKNOWN_17=bit.readwithlog('BL',dat,'UNKNOWN_17',1)
	gpdwg.variable.TDINDWG_JD=bit.readwithlog('BL',dat,'TDINDWG_JD',1)
	gpdwg.variable.TDINDWG_MS=bit.readwithlog('BL',dat,'TDINDWG_MS',1)
	gpdwg.variable.TDUSRTIMER_JD=bit.readwithlog('BL',dat,'TDUSRTIMER_JD',1)
	gpdwg.variable.TDUSRTIMER_MS=bit.readwithlog('BL',dat,'TDUSRTIMER_MS',1)
	gpdwg.variable.CECOLOR=bit.readwithlog('CMC',dat,'CECOLOR',1)
	gpdwg.variable.HANDSEED=bit.readwithlog('H',dat,'HANDSEED',1)
	gpdwg.variable.CLAYER=bit.readwithlog('H',dat,'CLAYER',1)
	gpdwg.variable.TEXTSTYLE=bit.readwithlog('H',dat,'TEXTSTYLE',1)
	gpdwg.variable.CELTYPE=bit.readwithlog('H',dat,'CELTYPE',1)
	if dat.version >= 2007:
		gpdwg.variable.CMATERIAL=bit.readwithlog('H',dat,'CMATERIAL',1)
	gpdwg.variable.DIMSTYLE=bit.readwithlog('H',dat,'DIMSTYLE',1)
	gpdwg.variable.CMLSTYLE=bit.readwithlog('H',dat,'CMLSTYLE',1)
	if dat.version >= 2000:
		gpdwg.variable.PSVPSCALE=bit.readwithlog('BD',dat,'PSVPSCALE',1)
	gpdwg.variable.INSBASE_PS=bit.readwithlog('3BD',dat,'INSBASE_PS',1)
	gpdwg.variable.EXTMIN_PS=bit.readwithlog('3BD',dat,'EXTMIN_PS',1)
	gpdwg.variable.EXTMAX_PS=bit.readwithlog('3BD',dat,'EXTMAX_PS',1)
	gpdwg.variable.LIMMIN_PS=bit.readwithlog('2RD',dat,'LIMMIN_PS',1)
	gpdwg.variable.LIMMAX_PS=bit.readwithlog('2RD',dat,'LIMMAX_PS',1)
	gpdwg.variable.ELEVATION_PS=bit.readwithlog('BD',dat,'ELEVATION_PS',1)
	gpdwg.variable.UCSORG_PS=bit.readwithlog('3BD',dat,'UCSORG_PS',1)
	gpdwg.variable.UCSXDIR_PS=bit.readwithlog('3BD',dat,'UCSXDIR_PS',1)
	gpdwg.variable.UCSYDIR_PS=bit.readwithlog('3BD',dat,'UCSYDIR_PS',1)
	gpdwg.variable.UCSNAME_PS=bit.readwithlog('H',dat,'UCSNAME_PS',1)
	if dat.version >= 2000:
		gpdwg.variable.PUCSORTHOREF=bit.readwithlog('H',dat,'PUCSORTHOREF',1)
		gpdwg.variable.PUCSORTHOVIEW=bit.readwithlog('BS',dat,'PUCSORTHOVIEW',1)
		gpdwg.variable.PUCSBASE=bit.readwithlog('H',dat,'PUCSBASE',1)
		gpdwg.variable.PUCSORGTOP=bit.readwithlog('3BD',dat,'PUCSORGTOP',1)
		gpdwg.variable.PUCSORGBOTTOM=bit.readwithlog('3BD',dat,'PUCSORGBOTTOM',1)
		gpdwg.variable.PUCSORGLEFT=bit.readwithlog('3BD',dat,'PUCSORGLEFT',1)
		gpdwg.variable.PUCSORGRIGHT=bit.readwithlog('3BD',dat,'PUCSORGRIGHT',1)
		gpdwg.variable.PUCSORGFRONT=bit.readwithlog('3BD',dat,'PUCSORGFRONT',1)
		gpdwg.variable.PUCSORGBACK=bit.readwithlog('3BD',dat,'PUCSORGBACK',1)
	gpdwg.variable.INSBASE_MS=bit.readwithlog('3BD',dat,'INSBASE_MS',1)
	gpdwg.variable.EXTMIN_MS=bit.readwithlog('3BD',dat,'EXTMIN_MS',1)
	gpdwg.variable.EXTMAX_MS=bit.readwithlog('3BD',dat,'EXTMAX_MS',1)
	gpdwg.variable.LIMMIN_MS=bit.readwithlog('2RD',dat,'LIMMIN_MS',1)
	gpdwg.variable.LIMMAX_MS=bit.readwithlog('2RD',dat,'LIMMAX_MS',1)
	gpdwg.variable.ELEVATION_MS=bit.readwithlog('BD',dat,'ELEVATION_MS',1)
	gpdwg.variable.UCSORG_MS=bit.readwithlog('3BD',dat,'UCSORG_MS',1)
	gpdwg.variable.UCSXDIR_MS=bit.readwithlog('3BD',dat,'UCSXDIR_MS',1)
	gpdwg.variable.UCSYDIR_MS=bit.readwithlog('3BD',dat,'UCSYDIR_MS',1)
	gpdwg.variable.UCSNAME_MS=bit.readwithlog('H',dat,'UCSNAME_MS',1)
	if dat.version >= 2000:
		gpdwg.variable.UCSORTHOREF=bit.readwithlog('H',dat,'UCSORTHOREF',1)
		gpdwg.variable.UCSORTHOVIEW=bit.readwithlog('BS',dat,'UCSORTHOVIEW',1)
		gpdwg.variable.UCSBASE=bit.readwithlog('H',dat,'UCSBASE',1)
		gpdwg.variable.UCSORGTOP=bit.readwithlog('3BD',dat,'UCSORGTOP',1)
		gpdwg.variable.UCSORGBOTTOM=bit.readwithlog('3BD',dat,'UCSORGBOTTOM',1)
		gpdwg.variable.UCSORGLEFT=bit.readwithlog('3BD',dat,'UCSORGLEFT',1)
		gpdwg.variable.UCSORGRIGHT=bit.readwithlog('3BD',dat,'UCSORGRIGHT',1)
		gpdwg.variable.UCSORGFRONT=bit.readwithlog('3BD',dat,'UCSORGFRONT',1)
		gpdwg.variable.UCSORGBACK=bit.readwithlog('3BD',dat,'UCSORGBACK',1)
		gpdwg.variable.DIMPOST=bit.readwithlog('TV',dat,'DIMPOST',1)
		gpdwg.variable.DIMAPOST=bit.readwithlog('TV',dat,'DIMAPOST',1)
	if dat.version <= 14:
		gpdwg.variable.DIMTOL=bit.readwithlog('B',dat,'DIMTOL',1)
		gpdwg.variable.DIMLIM=bit.readwithlog('B',dat,'DIMLIM',1)
		gpdwg.variable.DIMTIH=bit.readwithlog('B',dat,'DIMTIH',1)
		gpdwg.variable.DIMTOH=bit.readwithlog('B',dat,'DIMTOH',1)
		gpdwg.variable.DIMSE1=bit.readwithlog('B',dat,'DIMSE1',1)
		gpdwg.variable.DIMSE2=bit.readwithlog('B',dat,'DIMSE2',1)
		gpdwg.variable.DIMALT=bit.readwithlog('B',dat,'DIMALT',1)
		gpdwg.variable.DIMTOFL=bit.readwithlog('B',dat,'DIMTOFL',1)
		gpdwg.variable.DIMSAH=bit.readwithlog('B',dat,'DIMSAH',1)
		gpdwg.variable.DIMTIX=bit.readwithlog('B',dat,'DIMTIX',1)
		gpdwg.variable.DIMSOXD=bit.readwithlog('B',dat,'DIMSOXD',1)
		gpdwg.variable.DIMALTD=bit.readwithlog('RC',dat,'DIMALTD',1)
		gpdwg.variable.DIMZIN=bit.readwithlog('RC',dat,'DIMZIN',1)
		gpdwg.variable.DIMSD1=bit.readwithlog('B',dat,'DIMSD1',1)
		gpdwg.variable.DIMSD2=bit.readwithlog('B',dat,'DIMSD2',1)
		gpdwg.variable.DIMTOLJ=bit.readwithlog('RC',dat,'DIMTOLJ',1)
		gpdwg.variable.DIMJUST=bit.readwithlog('RC',dat,'DIMJUST',1)
		gpdwg.variable.DIMFIT=bit.readwithlog('RC',dat,'DIMFIT',1)
		gpdwg.variable.DIMUPT=bit.readwithlog('B',dat,'DIMUPT',1)
		gpdwg.variable.DIMTZIN=bit.readwithlog('RC',dat,'DIMTZIN',1)
		gpdwg.variable.DIMALTZ=bit.readwithlog('RC',dat,'DIMALTZ',1)
		gpdwg.variable.DIMALTTZ=bit.readwithlog('RC',dat,'DIMALTTZ',1)
		gpdwg.variable.DIMTAD=bit.readwithlog('RC',dat,'DIMTAD',1)
		gpdwg.variable.DIMUNIT=bit.readwithlog('BS',dat,'DIMUNIT',1)
		gpdwg.variable.DIMAUNIT=bit.readwithlog('BS',dat,'DIMAUNIT',1)
		gpdwg.variable.DIMDEC=bit.readwithlog('BS',dat,'DIMDEC',1)
		gpdwg.variable.DIMTDEC=bit.readwithlog('BS',dat,'DIMTDEC',1)
		gpdwg.variable.DIMALTU=bit.readwithlog('BS',dat,'DIMALTU',1)
		gpdwg.variable.DIMALTTD=bit.readwithlog('BS',dat,'DIMALTTD',1)
		gpdwg.variable.DIMTXSTY=bit.readwithlog('H',dat,'DIMTXSTY',1)
	gpdwg.variable.DIMSCALE=bit.readwithlog('BD',dat,'DIMSCALE',1)
	gpdwg.variable.DIMASZ=bit.readwithlog('BD',dat,'DIMASZ',1)
	gpdwg.variable.DIMEXO=bit.readwithlog('BD',dat,'DIMEXO',1)
	gpdwg.variable.DIMDLI=bit.readwithlog('BD',dat,'DIMDLI',1)
	gpdwg.variable.DIMEXE=bit.readwithlog('BD',dat,'DIMEXE',1)
	gpdwg.variable.DIMRND=bit.readwithlog('BD',dat,'DIMRND',1)
	gpdwg.variable.DIMDLE=bit.readwithlog('BD',dat,'DIMDLE',1)
	gpdwg.variable.DIMTP=bit.readwithlog('BD',dat,'DIMTP',1)
	gpdwg.variable.DIMTM=bit.readwithlog('BD',dat,'DIMTM',1)
	if dat.version >= 2007:
		gpdwg.variable.DIMFXL=bit.readwithlog('BD',dat,'DIMFXL',1)
		gpdwg.variable.DIMJOGANG=bit.readwithlog('BD',dat,'DIMJOGANG',1)
		gpdwg.variable.DIMTFILL=bit.readwithlog('BS',dat,'DIMTFILL',1)
		gpdwg.variable.DIMTFILLCLR=bit.readwithlog('CMC',dat,'DIMTFILLCLR',1)
	if dat.version >= 2000:
		gpdwg.variable.DIMTOL=bit.readwithlog('B',dat,'DIMTOL',1)
		gpdwg.variable.DIMLIM=bit.readwithlog('B',dat,'DIMLIM',1)
		gpdwg.variable.DIMTIH=bit.readwithlog('B',dat,'DIMTIH',1)
		gpdwg.variable.DIMTOH=bit.readwithlog('B',dat,'DIMTOH',1)
		gpdwg.variable.DIMSE1=bit.readwithlog('B',dat,'DIMSE1',1)
		gpdwg.variable.DIMSE2=bit.readwithlog('B',dat,'DIMSE2',1)
		gpdwg.variable.DIMTAD=bit.readwithlog('BS',dat,'DIMTAD',1)
		gpdwg.variable.DIMZIN=bit.readwithlog('BS',dat,'DIMZIN',1)
		gpdwg.variable.DIMAZIN=bit.readwithlog('BS',dat,'DIMAZIN',1)
	if dat.version >= 2007:
		gpdwg.variable.DIMARCSYM=bit.readwithlog('BS',dat,'DIMARCSYM',1)
	gpdwg.variable.DIMTXT=bit.readwithlog('BD',dat,'DIMTXT',1)
	gpdwg.variable.DIMCEN=bit.readwithlog('BD',dat,'DIMCEN',1)
	gpdwg.variable.DIMTSZ=bit.readwithlog('BD',dat,'DIMTSZ',1)
	gpdwg.variable.DIMALTF=bit.readwithlog('BD',dat,'DIMALTF',1)
	gpdwg.variable.DIMLFAC=bit.readwithlog('BD',dat,'DIMLFAC',1)
	gpdwg.variable.DIMTVP=bit.readwithlog('BD',dat,'DIMTVP',1)
	gpdwg.variable.DIMTFAC=bit.readwithlog('BD',dat,'DIMTFAC',1)
	gpdwg.variable.DIMGAP=bit.readwithlog('BD',dat,'DIMGAP',1)
	if dat.version <= 14:
		gpdwg.variable.DIMPOST=bit.readwithlog('T',dat,'DIMPOST',1)
		gpdwg.variable.DIMAPOST=bit.readwithlog('T',dat,'DIMAPOST',1)
		gpdwg.variable.DIMBLK=bit.readwithlog('T',dat,'DIMBLK',1)
		gpdwg.variable.DIMBLK1=bit.readwithlog('T',dat,'DIMBLK1',1)
		gpdwg.variable.DIMBLK2=bit.readwithlog('T',dat,'DIMBLK2',1)
	if dat.version >= 2000:
		gpdwg.variable.DIMALTRND=bit.readwithlog('BD',dat,'DIMALTRND',1)
		gpdwg.variable.DIMALT=bit.readwithlog('B',dat,'DIMALT',1)
		gpdwg.variable.DIMALTD=bit.readwithlog('BS',dat,'DIMALTD',1)
		gpdwg.variable.DIMTOFL=bit.readwithlog('B',dat,'DIMTOFL',1)
		gpdwg.variable.DIMSAH=bit.readwithlog('B',dat,'DIMSAH',1)
		gpdwg.variable.DIMTIX=bit.readwithlog('B',dat,'DIMTIX',1)
		gpdwg.variable.DIMSOXD=bit.readwithlog('B',dat,'DIMSOXD',1)
	gpdwg.variable.DIMCLRD=bit.readwithlog('CMC',dat,'DIMCLRD',1)
	gpdwg.variable.DIMCLRE=bit.readwithlog('CMC',dat,'DIMCLRE',1)
	gpdwg.variable.DIMCLRT=bit.readwithlog('CMC',dat,'DIMCLRT',1)
	if dat.version >= 2000:
		gpdwg.variable.DIMADEC=bit.readwithlog('BS',dat,'DIMADEC',1)
		gpdwg.variable.DIMDEC=bit.readwithlog('BS',dat,'DIMDEC',1)
		gpdwg.variable.DIMTDEC=bit.readwithlog('BS',dat,'DIMTDEC',1)
		gpdwg.variable.DIMALTU=bit.readwithlog('BS',dat,'DIMALTU',1)
		gpdwg.variable.DIMALTTD=bit.readwithlog('BS',dat,'DIMALTTD',1)
		gpdwg.variable.DIMAUNIT=bit.readwithlog('BS',dat,'DIMAUNIT',1)
		gpdwg.variable.DIMFRAC=bit.readwithlog('BS',dat,'DIMFRAC',1)
		gpdwg.variable.DIMLUNIT=bit.readwithlog('BS',dat,'DIMLUNIT',1)
		gpdwg.variable.DIMDSEP=bit.readwithlog('BS',dat,'DIMDSEP',1)
		gpdwg.variable.DIMTMOVE=bit.readwithlog('BS',dat,'DIMTMOVE',1)
		gpdwg.variable.DIMJUST=bit.readwithlog('BS',dat,'DIMJUST',1)
		gpdwg.variable.DIMSD1=bit.readwithlog('B',dat,'DIMSD1',1)
		gpdwg.variable.DIMSD2=bit.readwithlog('B',dat,'DIMSD2',1)
		gpdwg.variable.DIMTOLJ=bit.readwithlog('BS',dat,'DIMTOLJ',1)
		gpdwg.variable.DIMTZIN=bit.readwithlog('BS',dat,'DIMTZIN',1)
		gpdwg.variable.DIMALTZ=bit.readwithlog('BS',dat,'DIMALTZ',1)
		gpdwg.variable.DIMALTTZ=bit.readwithlog('BS',dat,'DIMALTTZ',1)
		gpdwg.variable.DIMUPT=bit.readwithlog('B',dat,'DIMUPT',1)
		gpdwg.variable.DIMATFIT=bit.readwithlog('BS',dat,'DIMATFIT',1)
	if dat.version >= 2007:
		gpdwg.variable.DIMFXLON=bit.readwithlog('B',dat,'DIMFXLON',1)
	if dat.version >= 2010:
		gpdwg.variable.DIMTXTDIRECTION=bit.readwithlog('B',dat,'DIMTXTDIRECTION',1)
		gpdwg.variable.DIMALTMZF=bit.readwithlog('BD',dat,'DIMALTMZF',1)
		gpdwg.variable.DIMALTMZS=bit.readwithlog('T',dat,'DIMALTMZS',1)
		gpdwg.variable.DIMMZF=bit.readwithlog('BD',dat,'DIMMZF',1)
		gpdwg.variable.DIMMZS=bit.readwithlog('T',dat,'DIMMZS',1)
	if dat.version >= 2000:
		gpdwg.variable.DIMTXSTY=bit.readwithlog('H',dat,'DIMTXSTY',1)
		gpdwg.variable.DIMLDRBLK=bit.readwithlog('H',dat,'DIMLDRBLK',1)
		gpdwg.variable.DIMBLK=bit.readwithlog('H',dat,'DIMBLK',1)
		gpdwg.variable.DIMBLK1=bit.readwithlog('H',dat,'DIMBLK1',1)
		gpdwg.variable.DIMBLK2=bit.readwithlog('H',dat,'DIMBLK2',1)
	if dat.version >= 2007:
		gpdwg.variable.DIMLTYPE=bit.readwithlog('H',dat,'DIMLTYPE',1)
		gpdwg.variable.DIMLTEX1=bit.readwithlog('H',dat,'DIMLTEX1',1)
		gpdwg.variable.DIMLTEX2=bit.readwithlog('H',dat,'DIMLTEX2',1)
	if dat.version >= 2000:
		gpdwg.variable.DIMLWD=bit.readwithlog('BS',dat,'DIMLWD',1)
		gpdwg.variable.DIMLWE=bit.readwithlog('BS',dat,'DIMLWE',1)
	gpdwg.variable.BLOCK_CONTROL_OBJECT=bit.readwithlog('H',dat,'BLOCK_CONTROL_OBJECT',1)
	gpdwg.variable.LAYER_CONTROL_OBJECT=bit.readwithlog('H',dat,'LAYER_CONTROL_OBJECT',1)
	gpdwg.variable.STYLE_CONTROL_OBJECT=bit.readwithlog('H',dat,'STYLE_CONTROL_OBJECT',1)
	gpdwg.variable.LINETYPE_CONTROL_OBJECT=bit.readwithlog('H',dat,'LINETYPE_CONTROL_OBJECT',1)
	gpdwg.variable.VIEW_CONTROL_OBJECT=bit.readwithlog('H',dat,'VIEW_CONTROL_OBJECT',1)
	gpdwg.variable.UCS_CONTROL_OBJECT=bit.readwithlog('H',dat,'UCS_CONTROL_OBJECT',1)
	gpdwg.variable.VPORT_CONTROL_OBJECT=bit.readwithlog('H',dat,'VPORT_CONTROL_OBJECT',1)
	gpdwg.variable.APPID_CONTROL_OBJECT=bit.readwithlog('H',dat,'APPID_CONTROL_OBJECT',1)
	gpdwg.variable.DIMSTYLE_CONTROL_OBJECT=bit.readwithlog('H',dat,'DIMSTYLE_CONTROL_OBJECT',1)
	if dat.version <= 2000:
		gpdwg.variable.VIEWPORT_ENTITY_HEADER_CONTROL_OBJECT=bit.readwithlog('H',dat,'VIEWPORT_ENTITY_HEADER_CONTROL_OBJECT',1)
	gpdwg.variable.DICTIONARY_ACAD_GROUP=bit.readwithlog('H',dat,'DICTIONARY_ACAD_GROUP',1)
	gpdwg.variable.DICTIONARY_ACAD_MLINESTYLE=bit.readwithlog('H',dat,'DICTIONARY_ACAD_MLINESTYLE',1)
	gpdwg.variable.DICTIONARY_NAMED_OBJECTS=bit.readwithlog('H',dat,'DICTIONARY_NAMED_OBJECTS',1)
	if dat.version >= 2000:
		gpdwg.variable.TSTACKALIGN=bit.readwithlog('BS',dat,'TSTACKALIGN',1)
		gpdwg.variable.TSTACKSIZE=bit.readwithlog('BS',dat,'TSTACKSIZE',1)
		gpdwg.variable.HYPERLINKBASE=bit.readwithlog('TV',dat,'HYPERLINKBASE',1)
		gpdwg.variable.STYLESHEET=bit.readwithlog('TV',dat,'STYLESHEET',1)
		gpdwg.variable.DICTIONARY_LAYOUTS=bit.readwithlog('H',dat,'DICTIONARY_LAYOUTS',1)
		gpdwg.variable.DICTIONARY_PLOTSETTINGS=bit.readwithlog('H',dat,'DICTIONARY_PLOTSETTINGS',1)
		gpdwg.variable.DICTIONARY_PLOTSTYLES=bit.readwithlog('H',dat,'DICTIONARY_PLOTSTYLES',1)
	if dat.version >= 2004:
		gpdwg.variable.DICTIONARY_MATERIALS=bit.readwithlog('H',dat,'DICTIONARY_MATERIALS',1)
		gpdwg.variable.DICTIONARY_COLORS=bit.readwithlog('H',dat,'DICTIONARY_COLORS',1)
	if dat.version >= 2007:
		gpdwg.variable.DICTIONARY_VISUALSTYLE=bit.readwithlog('H',dat,'DICTIONARY_VISUALSTYLE',1)
	if dat.version >= 2013:
		gpdwg.variable.UNKNOWN_18=bit.readwithlog('H',dat,'UNKNOWN_18',1)
	if dat.version >= 2000:
		gpdwg.variable.FLAGS=bit.readwithlog('BL',dat,'FLAGS',1)
		gpdwg.variable.INSUNITS=bit.readwithlog('BS',dat,'INSUNITS',1)
		gpdwg.variable.CEPSNTYPE=bit.readwithlog('BS',dat,'CEPSNTYPE',1)
		if gpdwg.variable.CEPSNTYPE  == 3:
			gpdwg.variable.CPSNID=bit.readwithlog('H',dat,'CPSNID',1)
		gpdwg.variable.FINGERPRINTGUID=bit.readwithlog('TV',dat,'FINGERPRINTGUID',1)
		gpdwg.variable.VERSIONGUID=bit.readwithlog('TV',dat,'VERSIONGUID',1)
	if dat.version >= 2004:
		gpdwg.variable.SORTENTS=bit.readwithlog('RC',dat,'SORTENTS',1)
		gpdwg.variable.INDEXCTL=bit.readwithlog('RC',dat,'INDEXCTL',1)
		gpdwg.variable.HIDETEXT=bit.readwithlog('RC',dat,'HIDETEXT',1)
		gpdwg.variable.XCLIPFRAME=bit.readwithlog('RC',dat,'XCLIPFRAME',1)
		gpdwg.variable.DIMASSOC=bit.readwithlog('RC',dat,'DIMASSOC',1)
		gpdwg.variable.HALOGAP=bit.readwithlog('RC',dat,'HALOGAP',1)
		gpdwg.variable.OBSCUREDCOLOR=bit.readwithlog('BS',dat,'OBSCUREDCOLOR',1)
		gpdwg.variable.INTERSECTIONCOLOR=bit.readwithlog('BS',dat,'INTERSECTIONCOLOR',1)
		gpdwg.variable.OBSCUREDLTYPE=bit.readwithlog('RC',dat,'OBSCUREDLTYPE',1)
		gpdwg.variable.INTERSECTIONDISPLAY=bit.readwithlog('RC',dat,'INTERSECTIONDISPLAY',1)
		gpdwg.variable.PROJECTNAME=bit.readwithlog('TV',dat,'PROJECTNAME',1)
	gpdwg.variable.BLOCK_RECORD_PS=bit.readwithlog('H',dat,'BLOCK_RECORD_PS',1)
	gpdwg.variable.BLOCK_RECORD_MS=bit.readwithlog('H',dat,'BLOCK_RECORD_MS',1)
	gpdwg.variable.LTYPE_BYLAYER=bit.readwithlog('H',dat,'LTYPE_BYLAYER',1)
	gpdwg.variable.LTYPE_BYBLOCK=bit.readwithlog('H',dat,'LTYPE_BYBLOCK',1)
	gpdwg.variable.LTYPE_CONTINUOUS=bit.readwithlog('H',dat,'LTYPE_CONTINUOUS',1)
	if dat.version >= 2007:
		gpdwg.variable.CAMERADISPLAY=bit.readwithlog('B',dat,'CAMERADISPLAY',1)
		gpdwg.variable.UNKNOWN_19=bit.readwithlog('BL',dat,'UNKNOWN_19',1)
		gpdwg.variable.UNKNOWN_20=bit.readwithlog('BL',dat,'UNKNOWN_20',1)
		gpdwg.variable.UNKNOWN_21=bit.readwithlog('BD',dat,'UNKNOWN_21',1)
		gpdwg.variable.STEPSPERSEC=bit.readwithlog('BD',dat,'STEPSPERSEC',1)
		gpdwg.variable.STEPSIZE=bit.readwithlog('BD',dat,'STEPSIZE',1)
		gpdwg.variable.DWFPREC_3D=bit.readwithlog('BD',dat,'DWFPREC_3D',1)
		gpdwg.variable.LENSLENGTH=bit.readwithlog('BD',dat,'LENSLENGTH',1)
		gpdwg.variable.CAMERAHEIGHT=bit.readwithlog('BD',dat,'CAMERAHEIGHT',1)
		gpdwg.variable.SOLIDHIST=bit.readwithlog('RC',dat,'SOLIDHIST',1)
		gpdwg.variable.SHOWHIST=bit.readwithlog('RC',dat,'SHOWHIST',1)
		gpdwg.variable.PSOLWIDTH=bit.readwithlog('BD',dat,'PSOLWIDTH',1)
		gpdwg.variable.PSOLHEIGHT=bit.readwithlog('BD',dat,'PSOLHEIGHT',1)
		gpdwg.variable.LOFTANG1=bit.readwithlog('BD',dat,'LOFTANG1',1)
		gpdwg.variable.LOFTANG2=bit.readwithlog('BD',dat,'LOFTANG2',1)
		gpdwg.variable.LOFTMAG1=bit.readwithlog('BD',dat,'LOFTMAG1',1)
		gpdwg.variable.LOFTMAG2=bit.readwithlog('BD',dat,'LOFTMAG2',1)
		gpdwg.variable.LOFTPARAM=bit.readwithlog('BS',dat,'LOFTPARAM',1)
		gpdwg.variable.LOFTNORMALS=bit.readwithlog('RC',dat,'LOFTNORMALS',1)
		gpdwg.variable.LATITUDE=bit.readwithlog('BD',dat,'LATITUDE',1)
		gpdwg.variable.LONGITUDE=bit.readwithlog('BD',dat,'LONGITUDE',1)
		gpdwg.variable.NORTHDIRECTION=bit.readwithlog('BD',dat,'NORTHDIRECTION',1)
		gpdwg.variable.TIMEZONE=bit.readwithlog('BL',dat,'TIMEZONE',1)
		gpdwg.variable.LIGHTGLYPHDISPLAY=bit.readwithlog('RC',dat,'LIGHTGLYPHDISPLAY',1)
		gpdwg.variable.TILEMODELIGHTSYNCH=bit.readwithlog('RC',dat,'TILEMODELIGHTSYNCH',1)
		gpdwg.variable.DWFFRAME=bit.readwithlog('RC',dat,'DWFFRAME',1)
		gpdwg.variable.DGNFRAME=bit.readwithlog('RC',dat,'DGNFRAME',1)
		gpdwg.variable.UNKNOWN_22=bit.readwithlog('B',dat,'UNKNOWN_22',1)
		gpdwg.variable.INTERFERECOLOR=bit.readwithlog('CMC',dat,'INTERFERECOLOR',1)
		gpdwg.variable.INTERFEREOBJVS=bit.readwithlog('H',dat,'INTERFEREOBJVS',1)
		gpdwg.variable.INTERFEREVPVS=bit.readwithlog('H',dat,'INTERFEREVPVS',1)
		gpdwg.variable.DRAGVS=bit.readwithlog('H',dat,'DRAGVS',1)
		gpdwg.variable.CSHADOW=bit.readwithlog('RC',dat,'CSHADOW',1)
		gpdwg.variable.UNKNOWN_23=bit.readwithlog('BD',dat,'UNKNOWN_23',1)
	if dat.version >= 14:
		gpdwg.variable.UNKNOWN_24=bit.readwithlog('BS',dat,'UNKNOWN_24',1)
		gpdwg.variable.UNKNOWN_25=bit.readwithlog('BS',dat,'UNKNOWN_25',1)
		gpdwg.variable.UNKNOWN_26=bit.readwithlog('BS',dat,'UNKNOWN_26',1)
		gpdwg.variable.UNKNOWN_27=bit.readwithlog('BS',dat,'UNKNOWN_27',1)
	logger.debug('Generating variables from Flags')
	FlagsValue=int(gpdwg.variable.FLAGS)
	logger.debug('CELWEIGHT '+str(FlagsValue & 0X001F))
	gpdwg.variable.CELWEIGHT= FlagsValue & 0X001F
	logger.debug('ENDCAPS '+str(FlagsValue & 0X001F))
	gpdwg.variable.ENDCAPS=( FlagsValue & 0X0060) >> 5
	logger.debug('JOINSTYLE '+str(FlagsValue & 0X001F))
	gpdwg.variable.JOINSTYLE=( FlagsValue & 0X0180) >> 7
	logger.debug('LWDISPLAY '+str(FlagsValue & 0X001F))
	gpdwg.variable.LWDISPLAY= int(not (FlagsValue & 0X0200))
	logger.debug('XEDIT '+str(FlagsValue & 0X001F))
	gpdwg.variable.XEDIT= int(not (FlagsValue & 0X0400))
	logger.debug('EXTNAMES '+str(FlagsValue & 0X001F))
	gpdwg.variable.EXTNAMES=(FlagsValue & 0X0800) >> 11
	logger.debug('PSTYLEMODE '+str(FlagsValue & 0X001F))
	gpdwg.variable.PSTYLEMODE=(FlagsValue & 0X2000) >> 13
	logger.debug('OLESTARTUP '+str(FlagsValue & 0X001F))
	gpdwg.variable.OLESTARTUP=(FlagsValue & 0X4000) >> 14